@page "/Configuracion/periodos"
@using Programarcr.Contabilidad.Periodos.Dtos
@using System.Globalization
@using Programarcr.Contabilidad.Localization
@inject AbpBlazorMessageLocalizerHelper<ContabilidadResource> LH
@inherits IndexModel

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["Page:Title:Periodos"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                <Button Color="Color.Primary"
                        Clicked="OpenCreateModalAsync">@L["Page:NewPeriodo"]</Button>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="PeriodoContableDto"
                  Data="Entities"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                @*<DataGridEntityActionsColumn TItem="PeriodoContableDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="PeriodoContableDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="PeriodoContableDto"
                                          Text="@L["Delete"]"
                                          Clicked="() => DeleteEntityAsync(context)"
                                          ConfirmationMessage="()=>GetDeleteConfirmationMessage(context)" />
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>*@
                <DataGridColumn TItem="PeriodoContableDto"
                                Field="@nameof(PeriodoContableDto.Inicio)"
                                Caption="@L["Page:Periodo:Inicio"]">
                    <DisplayTemplate>
                        @($"{CultureInfo.CurrentUICulture.DateTimeFormat.GetMonthName(context.Inicio.Mes)} {context.Inicio.Año}")
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="PeriodoContableDto"
                                Field="@nameof(PeriodoContableDto.Fin)"
                                Caption="@L["Page:Periodo:Fin"]">
                    <DisplayTemplate>
                        @($"{@CultureInfo.CurrentUICulture.DateTimeFormat.GetMonthName(context.Fin.Mes)} {context.Fin.Año}")
                    </DisplayTemplate>
                </DataGridColumn>
                
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="@CreateModal">
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["Page:NewPeriodo"]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Validation Validator="@ValidacionInicio" >
                        <FieldLabel Class="mb-2">Inicio mes contable</FieldLabel>
                        <MesContableEdit @bind-Value="NewEntity.Inicio" @bind-Disabled="InicioDisabled">
                            <Feedback>
                                <ValidationError Class="text-danger" Style="display: inline">El valor es incorrecto</ValidationError>
                                <ValidationSuccess Class="text-success" Style="display: inline"></ValidationSuccess>
                            </Feedback>
                        </MesContableEdit>
                    </Validation>
                    
                    <Validation Validator="@ValidacionFin" >
                        <FieldLabel Class="mb-2">Fin mes contable</FieldLabel>
                        <MesContableEdit @bind-Value="NewEntity.Fin">
                            <Feedback>
                                <ValidationError Class="text-danger" Style="display: inline">El valor es incorrecto</ValidationError>
                                <ValidationSuccess Class="text-success" Style="display: inline"></ValidationSuccess>
                            </Feedback>
                        </MesContableEdit>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateModalAsync">@L["Cancel"]</Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateEntityAsync">@L["Save"]</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>